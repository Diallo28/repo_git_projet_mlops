name: Github-Docker Hub MLOps pipeline - Projet_MLOps_SDA_2024

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO_NAME: ${{ secrets.REPO_NAME }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest  # Le job fonctionne sous ubuntu-latest

    steps:
      - uses: actions/checkout@v2  # Utilisation de la version v2 pour la stabilité
        with:
          fetch-depth: 0
      # La première étape clone le dépôt.

      - name: Set up Python 3.12
        uses: actions/setup-python@v2  # Mise à jour vers la version v2
        with:
          python-version: '3.12'
      # Cette étape configure Python 3.9.

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # Installation des dépendances du projet.

      - name: Format
        run: |
          black app.py
      # Formatage du fichier app.py avec Black.

      - name: Lint
        run: |
          pylint --disable=R,C app.py
      # Vérification du linting sur app.py avec Pylint.

      - name: Test
        run: |
          python -m pytest -vv test.py
      # Exécution des tests unitaires avec Pytest.

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]

    steps:
      - uses: actions/checkout@v2
      # Cette étape clone à nouveau le dépôt pour le CD.

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
      # Login sécurisé à Docker Hub.

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
      # Récupération de la date actuelle pour taguer l'image Docker.

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
      # Construction de l'image Docker avec un tag basé sur la date actuelle.

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
      # Pousse l'image Docker sur Docker Hub.
